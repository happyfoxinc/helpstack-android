apply plugin: 'com.android.library'
apply plugin: 'maven'

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')


    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'org.apache.commons:commons-io:1.3.2'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'org.apache.httpcomponents:httpmime:4.2.6'
    implementation 'com.mcxiaoke.volley:library:1.0.19'
    implementation 'com.android.support:support-v4:27.1.1'
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}

uploadArchives {
    repositories.mavenDeployer {
        pom.groupId = 'com.tenmiles'
        pom.artifactId = 'helpstack'
        pom.version = '1.2.0'
        // Add other pom properties here if you want (developer details / licenses)
        repository(url: "file:///Users/anirudh/Desktop/gradleRelease/")
    }
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}